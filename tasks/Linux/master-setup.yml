---
- name: Initialize Kubernetes master with kubeadm init
  command: >
    kubeadm init
    {% if kubernetes_version is defined %}
    --kubernetes-version {{ kubernetes_version }}
    {% endif %}
    {% if kubernetes_apiserver_advertise_address is defined %}
    --apiserver-advertise-address={{ kubernetes_apiserver_advertise_address }}
    {% endif %}
    {% if kubernetes_ignore_preflight_errors is defined %}
    --ignore-preflight-errors={{ kubernetes_ignore_preflight_errors }}
    {% endif %}
    --pod-network-cidr={{ kubernetes_pod_network.cidr }}
    {{ kubernetes_kubeadm_init_extra_opts }}
  register: kubeadmin_init
  become: true
  when: not kubernetes_init_stat.stat.exists

- name: Print the init output to screen
  debug:
    msg: "{{ kubeadmin_init.stdout_lines }}"
  when: not kubernetes_init_stat.stat.exists

- name: Ensure .kube directory exists
  file:
    path: ~/.kube
    state: directory
  become: true

- name: Symlink the kubectl admin.conf to ~/.kube/conf
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
  become: true

# 如果Node有多个网卡的话，参考flannel issues 39701，
# 目前需要在kube-flannel.yml中使用--iface参数指定集群主机内网网卡的名称，否则可能会出现dns无法解析。
- import_tasks: config-flannel.yml
  when:
    - kubernetes_pod_network.cni == 'flannel'
    - kubernetes_apiserver_advertise_address is defined

- name: Configure Flannel networking
  command: kubectl apply -f {{ kubernetes_flannel_manifest_file }}
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"
  when:
    - kubernetes_pod_network.cni == 'flannel'
    - kubernetes_apiserver_advertise_address is not defined
  become: true

- name: Configure Calico networking
  command: kubectl apply -f {{ kubernetes_calico_manifest_file }}
  register: calico_result
  changed_when: "'created' in calico_result.stdout"
  when: kubernetes_pod_network.cni == 'calico'
  become: true

- name: Allow pods on master node (if configured)
  command: kubectl taint nodes --all node-role.kubernetes.io/master-
  when:
    - kubernetes_allow_pods_on_master | bool
    - not kubernetes_init_stat.stat.exists
  become: true

- name: Check if Helm is installed
  stat:
    path: "/usr/local/bin/helm"
  register: helm_is_installed

- name: Gather currently installed Helm version
  shell: /usr/local/bin/helm version --client | awk -F'"' '{print $2}'
  changed_when: false
  register: helm_current_version
  when: helm_is_installed.stat.exists

- import_tasks: helm_init.yml
  when: helm_current_version.stdout.split('.')[0] == 'v2'