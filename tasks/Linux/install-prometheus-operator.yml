---
- name: Check if prometheus-operator is installed
  shell: helm list --deployed {% if helm_current_version.stdout.split('.')[0] != 'v2' %}--all-namespaces{% endif %} | grep '^prometheus-operator\s' | wc -l
  register: install_status
  changed_when: false
  become: true

- block:
    - name: Create namespace {{ kubernetes_prometheus_operator_namespace }}
      shell: kubectl create ns {{ kubernetes_prometheus_operator_namespace }}
      register: result
      changed_when: "'created' in result.stdout"
      failed_when: "result.rc != 0 and 'already exists' not in result.stderr"

    - name: Create secret etcd-certs
      shell: |
        kubectl -n {{ kubernetes_prometheus_operator_namespace }} create secret generic etcd-certs \
          --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.crt \
          --from-file=/etc/kubernetes/pki/etcd/healthcheck-client.key \
          --from-file=/etc/kubernetes/pki/etcd/ca.crt
      register: result
      changed_when: "'created' in result.stdout"
      failed_when: "result.rc != 0 and 'already exists' not in result.stderr"

    - name: Modify kube-proxy configmap
      shell: |
        kubectl -n kube-system get cm kube-proxy -o yaml | \
          sed 's/metricsBindAddress:.*/metricsBindAddress: "0.0.0.0:10249"/' | \
          kubectl apply -f -
      register: result
      changed_when: "'configured' in result.stdout"

    - name: Restart kube-proxy
      shell: |
        kubectl -n kube-system delete pod -l "k8s-app=kube-proxy"
      register: result
      changed_when: "'deleted' in result.stdout"

    - name: Download prometheus-operator chart
      shell: helm fetch stable/prometheus-operator --version {{ kubernetes_prometheus_operator_version }} -d /tmp

    - name: Copy prometheus-operator vlaues file
      template:
        src: prometheus-operator-values.yml.j2
        dest: /tmp/prometheus-operator-values.yml

    - name: Install prometheus-operator
      shell: |
        helm upgrade -i prometheus-operator /tmp/prometheus-operator-{{ kubernetes_prometheus_operator_version }}.tgz \
          -f /tmp/prometheus-operator-values.yml \
          --namespace {{ kubernetes_prometheus_operator_namespace }} --force
      register: install_result

    - name: Print the install output to screen
      debug:
        msg: "{{ install_result.stdout_lines }}"
  become: true
  when: (install_status.stdout == '0') or (kubernetes_upgrade_prometheus_operator | bool)
